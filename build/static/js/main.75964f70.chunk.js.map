{"version":3,"sources":["components/CircularSpinner.tsx","components/CustomSearch.tsx","services/fetchData.service.ts","components/List.tsx","pages/Companies.tsx","pages/Users.tsx","pages/Large.tsx","pages/Small.tsx","pages/Main.tsx","pages/empty.svg","pages/Empty.message.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","display","marginLeft","spacing","width","CircularSpinner","classes","className","CircularProgress","style","padding","height","color","CustomSearch","props","useState","data","setData","timeout","type","name","id","placeholder","onKeyUp","e","clearTimeout","setTimeout","target","value","receive","fetchData","query","token","users","companies","test","contributions","members","this","fetch","method","then","json","items","filter","el","a","console","log","toString","each","push","d","datas","headers","forEach","body","login","JSON","stringify","dataa","fetchAllOrgs","List","collection","map","avatar","avatar_url","totalc","node_id","Item","src","alt","CompaniesPage","GitHubOutcome","useContext","gitHubuser","UsersPage","cont","totalCont","Larger","to","length","path","render","Smaller","Main","small","useMedia","window","matchMedia","matches","setMatches","useEffect","media","listener","addListener","removeListener","Empty","empty","createContext","App","setValue","fetcher","Provider","fetchAllUsers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75964f70.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      '& > * + *': {\n        marginLeft: theme.spacing(2),\n        width:\"30px\"\n       \n      },\n    },\n  }),\n);\n\nexport default function CircularSpinner() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress style={{width:'19px',padding:'.2em',height:'23px',color:'#fff'}}/>\n    </div>\n  );\n}","import './CustomSearch.scss';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CircularSpinner from './CircularSpinner';\nimport {useEffect,useState} from 'react';\n\n\nexport const CustomSearch = (props:{receive:(e:string|any)=>void})=>{\n    \n    const [data,setData] = useState('');\n    let timeout:any = null;\n    \n    function updateValue(e:string|any){\n        clearTimeout(timeout)\n        timeout = setTimeout(function(){\n            setData(e.target.value)\n            // console.log(e.target.value)\n            props.receive(e.target.value);\n        },1000)\n        \n    }\n    \n    return(\n        <div className=\"custom-text-input\">\n            \n            <input type=\"text\" name=\"\" id=\"\"\n             placeholder=\"Type a user name here\" \n             onKeyUp={updateValue}/>\n             <span>\n                 {\n                 data===''?<SearchIcon style={{color:'#fff'}}/>:<CircularSpinner/>\n             }</span>\n        </div>\n        \n       \n    )\n}","import { ThreeSixty } from '@material-ui/icons';\nimport { Users } from '../shared/users.model';\nimport { Companies } from '../shared/companies.model';\nexport class fetchData{\n    private token = 'd1403eb77b702e8003e49988f659ab6d0648500c' || process.env.REACT_API_KEY;\n    private users: Users[] = [];\n    private companies: Companies[] = [];\n    private test:any[] = [];\n    private contributions:any[] = [];\n    private members:any[] = [];\n    constructor(public query:string){\n            \n    }\n    testFetch():any[]{\n      const headers = {\n        'Authorization': `bearer ${this.token}`,\n    }\n    let body = {\n        \"query\": `query {\n           user(login: \"${this.query}\") {\n              name\n              contributionsCollection {\n                contributionCalendar {\n                  totalContributions\n                  \n                }\n              }\n            }\n          }`\n    }\n    const setUser = (value:string)=>{\n        body = {\n            \"query\": `query {\n                user(login: \"${value}\") {\n                  name\n                  contributionsCollection {\n                    contributionCalendar {\n                      totalContributions\n                      \n                    }\n                  }\n                }\n              }`\n        }\n    }\n        var apiResponse = fetch(`https://api.github.com/search/users?q=`+this.query, { method: 'GET'})\n        .then(data=>data.json())\n        .then(data=>{\n            data.items?.filter(async (el:any)=>{\n              if(el.type==\"User\"){\n                //search contribuiton\n                // setUser(el.login);\n                // const response = await fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\n                // const data = await response.json()\n                console.log('User and contribution ',data)\n                \n              }\n              else if (el.type == \"Organization\"){\n                // //search for members\n                // const response = await fetch('https://api.github.com/orgs/qquant-group/members?page=1', { method: 'POST', headers: headers })\n                // const data = await response.json();\n                console.log('Organization and Members',data)\n              }\n            })    \n            })\n        \n     return this.test;\n    }\n\n\n    fetchAllUsers():Users[]{\n        \n        var apiResponse = fetch(`https://api.github.com/search/users?q=`+this.query.toString(), { method: 'GET'})\n        .then(data=>data.json())\n        .then(data=>{\n            data.items?.filter((each:Users)=>{\n                    //filer all user by type = User\n                       if(each.type == \"User\"){\n                           \n                           this.users.push(each);\n                          //    console.log(each) \n                       }\n                      //  console.log(\"coming from fetch user\");\n            })\n        })\n       \n     return this.users;\n    }\n\n    fetchAllOrgs():Companies[]{\n        var apiResponse = fetch(`https://api.github.com/search/users?q=`+this.query, { method: 'GET'})\n        .then(data=>data.json())\n        .then(data=>{\n            data.items?.filter((d:Companies)=>{\n                       if( d.type == \"Organization\"){\n\n                           this.companies.push(d);\n                       }\n                    })\n                    // console.log(\"coming from fetch orgs\")\n            \n        })\n         return this.companies;\n    }\n\n    getContributions(datas:any[]){\n      \n      const headers = {\n          'Authorization': `bearer e0d1a029679a1120cc9dc67275b3fd94321d9c24`,\n      }\n      datas.forEach( async (data:any) =>{\n        console.log('contribuitons loop')\n          let body = {\n              \"query\": `query {\n                  user(login: \"${data.login}\") {\n                    name\n                    contributionsCollection {\n                      contributionCalendar {\n                        \n                        totalContributions\n      \n                      }\n                    }\n                  }\n                }`\n          }\n           \n\n          const response =  fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\n             .then(data=>data.json())\n              .then((value:any)=>{\n                   let  dataa = value\n                   this.contributions.push(dataa);\n                   console.log('Number of contribuition',value)\n\n                    }) \n      })\n  }\n\n    \n    \n    async getMembers(){\n        const headers = {\n            'Authorization': `bearer ${this.token}`,\n        }\n        this.fetchAllOrgs().forEach((data:any)=>{\n\n          const response =  fetch('https://api.github.com/orgs/qquant-group/members?page=1', { method: 'POST',headers: headers })\n               .then(data=>data.json())\n                .then((value:any)=>{\n                     let  dataa = value\n                     this.members.push(dataa);\n                     console.log('Number of contribuition',value)\n  \n                  }) \n               })\n    }\n\n\n\n\n}","import './List.scss'\nimport empy from '../pages/empty.svg'\nimport {useContext,createContext} from 'react';\nimport { gitHubuser } from '../App';\n\n\n\n\nexport const List  = ({collection}:{collection:any[]})=>{\n    \n    console.log('From list --- ',collection)\n    return(<>\n            {collection.map( data=>(\n\n            <Item key={data.node_id} login={data.login} avatar={data.avatar_url} totalc={43}/>\n            ))}   \n            </>\n    )\n}\n\nexport const Item = (props:{login:string,totalc:number,avatar:string})=>{\n    \n    return( \n        <div className=\"list-main\">\n            <div className=\"divider\"></div>\n            <div className=\"whole-content\">\n                <div className=\"avatar\">\n                    <img src={props.avatar} alt=\"\" width=\"50\" height=\"50\"/>\n                </div>\n                <div className=\"content\">\n                    <p>{props.login}</p> <br/>\n                    <span>{props.login}</span>\n                </div>\n                <div className=\"contribution-people\">\n                    <p>{props.totalc}</p>\n                </div>\n            </div>\n        </div>\n    )\n}","import './Companies.scss'\nimport { List } from '../components/List';\nimport { gitHubuser } from '../App';\nimport {useContext,createContext} from 'react';\n\n\nexport const toList:any|any[] = createContext(null)\nexport const CompaniesPage = ()=>{\n  const GitHubOutcome:any = useContext(gitHubuser)\n    return(\n        <div className=\"github-companies-right\">\n                    \n                <div className=\"user-contributions\">\n                  <p className=\"user-left\">COMPANY<span></span></p>\n                  <p className=\"companies-right\">PEOPLE<span></span></p>\n                </div>\n                <div className=\"content-itself\">\n                     <List collection={GitHubOutcome[1]}/>\n                         \n                 </div>\n    </div>\n    )\n}","import './Users.scss'\nimport { List } from '../components/List';\nimport { Data } from '../shared/shared';\nimport { toUserCompanySmall } from './Small';\nimport { gitHubuser, shipper } from '../App';\nimport {useContext,createContext} from 'react';\n\nexport const UsersPage = ()=>{\n  const GitHubOutcome:any = useContext(gitHubuser)\n  \n  let cont:any[] = GitHubOutcome[0];\n  let totalCont:any[] = cont;\n  let timeout: any = null; \n  // console.log('from list and put it ====',cont)\n  clearTimeout(timeout);\n  setTimeout(()=>{\n          const headers = {\n              'Authorization': `bearer 348e0517425e6fcc7a815b6489626d381b9e2a65`,\n          }\n          cont.forEach( async (data:any) =>{\n            // console.log('contribuitons loop')\n              let body = {\n                  \"query\": `query {\n                      user(login: \"${data.login}\") {\n                        name\n                        contributionsCollection {\n                          contributionCalendar {\n                            \n                            totalContributions\n          \n                          }\n                        }\n                      }\n                    }`\n              }\n               \n    \n              const response =  fetch('https://api.github.com/graphql', { method: 'POST', body: JSON.stringify(body), headers: headers })\n                 .then(data=>data.json())\n                  .then((value:any)=>{\n                       let  dataa = value\n                          totalCont = [{...value,...data}];\n                          console.log(\"Total coutn array\",totalCont)\n                        }) \n          })\n     \n  },1000)\n\n\n\n    // console.log('from user page',GitHubOutcome)\n    return(\n        <div className=\"github-companies-right\">\n                    \n                <div className=\"user-contributions\">\n                  <p className=\"user-left\">USER<span></span></p>\n                  <p className=\"companies-right\">CONTRIBUTIONS<span></span></p>\n                </div>\n                <div className=\"content-itself\">\n                     <List collection={totalCont}/>\n                   <p id=\"p\" className=\"show-more\">SHOW MORE</p>      \n                 </div>\n    </div>\n    )\n}","import './Large.scss' ;\nimport { CompaniesPage } from './Companies';\nimport React,{useContext,createContext} from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport {UsersPage}from './Users'\nimport { gitHubuser } from '../App';\nexport const toUserCompanyLarge:any|any[] = createContext(null)\nexport function Larger(){\n    const GitHubOutcome:any = useContext(gitHubuser)\n    return ( \n    <div className=\"desktop-content\">\n        <Router>\n          <div className=\"splitters-descriptors\">\n          \n                <div className=\"github-users-left\">\n                    <Link to=\"/users\" className=\"github inside-menu\">USERS({GitHubOutcome[0].length})</Link>\n                    <Route path=\"/users\" render={()=><UsersPage/>}></Route>\n                </div>\n                <div className=\"github-companies-right\">\n                       <Link to=\"/companies\" className=\"github inside-menu\">COMPANIES({GitHubOutcome[1].length})</Link>\n                       <Route path=\"/companies\" render={()=><CompaniesPage/>}></Route>\n                 </div>\n              \n          </div>\n          </Router>\n        </div>\n    )\n}","import './Small.scss';\nimport React,{useContext,createContext} from \"react\";\nimport { UsersPage } from './Users';\nimport { CompaniesPage } from './Companies';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { gitHubuser } from '../App';\n\nexport const toUserCompanySmall:any|any[] = createContext(null)\n\nexport function Smaller(){\n    const GitHubOutcome:any = useContext(gitHubuser)\n    let canIChange:boolean = true;\n    return (\n         <div className=\"mobile-content \">\n       \n         <Router>\n         <div className=\"splitters-descriptors\">\n             <div className=\"menus\">\n                 <div className=\"github-users-left \">\n                     \n                     <Link to=\"/users\" className=\"inside-menu github-u\">USERS({GitHubOutcome[0].length})</Link>\n                 </div>\n                 <div className=\"github-companies-right\">\n                     <Link to=\"/companies\" className=\"inside-menu \">COMPANIES({GitHubOutcome[1].length})</Link>\n                 </div>\n             </div>\n               <div>\n                \n                     <Route path=\"/users\" render={()=><UsersPage/>}></Route>\n                    <Route path=\"/companies\" render={()=><CompaniesPage/>}></Route>\n            \n                 \n               </div>\n             \n       </div>\n       \n       </Router>\n     </div>\n    )\n}","import {useState,useEffect,useContext, createContext}from 'react';\nimport { Larger } from './Large';\nimport { Smaller } from './Small';\nimport { gitHubuser } from '../App';\n\nexport function Main(){\n  var value = useContext(gitHubuser)\n      let small = useMedia(\"(max-width: 768px)\")\n      let large = useMedia(\"(min-width: 769px)\")\n      \n    return(\n        <div>\n         \n            {small?<Smaller/>:<Larger/>}\n         \n        </div>\n    )\n}\nexport function useMedia(query: string) {\n    // tslint:disable-next-line:prettier\n    const [matches,setMatches] = useState(window.matchMedia(query).matches);\n    useEffect(()=>{\n      let media = window.matchMedia(query);\n      if(media.matches !== matches){\n        setMatches(media.matches);\n      }\n      let listener = ()=> setMatches(media.matches);\n      media.addListener(listener);\n      return ()=> media.removeListener(listener);\n    },[query])\n  \n    return matches;\n  }","export default __webpack_public_path__ + \"static/media/empty.650aeafd.svg\";","import './Empty.message.scss';\nimport { useMedia } from './Main';\nimport empty from './empty.svg'\nexport function Empty(){\n    let small = useMedia(\"(max-width: 768px)\")\n    return (\n    <div className=\"empty-holder\">\n            <img src={empty}alt=\"\" style={small?{width:'60px'}:{}}/>\n            <p>Enter a login, name or company you are looking for.</p>\n        </div>\n    )\n}","import './App.scss';\nimport { CustomSearch } from './components/CustomSearch';\nimport {useState,useEffect,createContext}from 'react';\nimport { fetchData } from './services/fetchData.service';\nimport { Main } from './pages/Main';\nimport { Empty } from './pages/Empty.message';\nimport { Data } from './shared/shared';\nimport { fetchDataService } from './services/fetcher.service';\nexport function shipper(value:any){\n  return value;\n}\nexport const  gitHubuser:any = createContext('');\nfunction App() {\n    const [value,setValue] = useState('')\n    let users:any[] = [];\n    let fetcher = new fetchData(value);\n \n\n    async function receiveInput(value:any){\n      setValue(value);\n      fetcher = new fetchData(value)\n      shipper(value)\n      \n      \n    }\n    \n\n    \n    \n  return (\n    <div className=\"App\">\n <div className=\"holder-content\">\n            <div className=\"description\">\n                <h1>Search for GitHub Users</h1>\n                {/* {value} */}\n            </div>\n            <div className=\"search\" style={{width:'inherit'}}>\n                <div className=\"input-customized\">\n                    <CustomSearch receive={receiveInput}/>\n                </div>\n            </div>\n            \n            <div className=\"holder-responsive\">\n              <gitHubuser.Provider value={[fetcher.fetchAllUsers(),fetcher.fetchAllOrgs()]}>\n                { value===''?<Empty/>:<Main/>}\n              </gitHubuser.Provider>\n                \n            </div>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}